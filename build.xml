<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This file is part of citygml4j.
 * Copyright (c) 2007 - 2012
 * Institute for Geodesy and Geoinformation Science
 * Technische UniversitÃ¤t Berlin, Germany
 * http://www.igg.tu-berlin.de/
 *
 * The citygml4j library is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see 
 * <http://www.gnu.org/licenses/>.
 * 
 * $Id$
-->
<project name="citygml4j" default="dist" basedir=".">

	<!-- load external property sets -->
	<property file="default.properties" />

	<!-- classpath -->
	<path id="classpath">
		<fileset dir="${dir.lib}" includes="*.jar" />
	</path>

	<!-- JAXB XJC compiler -->
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath>
			<path refid="classpath" />
			<fileset dir="${dir.resources.jaxb.xjc-plugins}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<target name="clean" description="clean up">
		<!-- delete the ${dir.build} and ${jar} directory trees -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dist.lib}" />
		<delete dir="${dir.dist.javadoc}" />
		<delete dir="${dir.dist.samples}" />
		<delete dir="${dir.dist}" />
	</target>

	<target name="clean_samples" description="clean sample dir">
		<subant target="clean">
			<fileset dir="${dir.samples}" includes="**/build.xml" />
		</subant>
	</target>

	<target name="compile_xjc_plugins" description="compile project specific XJC plugins">
		<mkdir dir="${plugin.xjc.collection-setter.dir.build}" />

		<!-- compile collection-setter-injector plugin -->
		<javac classpathref="classpath" srcdir="${plugin.xjc.collection-setter.dir.src}" destdir="${plugin.xjc.collection-setter.dir.build}" />

		<!-- create jar file for collection-setter-injector plugin -->
		<jar jarfile="${plugin.xjc.collection-setter.dir}/${plugin.xjc.collection-setter.jar}" basedir="${plugin.xjc.collection-setter.dir.build}">
			<fileset dir="${plugin.xjc.collection-setter.dir}/META-INF" includes="**/*" />
			<fileset dir="${plugin.xjc.collection-setter.dir.src}" includes="**/*.properties" />
		</jar>

		<!-- clean up build environment -->
		<delete dir="${plugin.xjc.collection-setter.dir.build}" />
	</target>

	<target name="generate_jaxb_binding" description="compile JAXB classes from CityGML schemas">
		<mkdir dir="${dir.src-gen}/org/citygml4j/jaxb" />

		<!-- create JAXB classes from CityGML schemas -->
		<xjc destdir="${dir.src-gen}" extension="true" removeOldOutput="yes" description="generate CityGML schema derived classess">
			<arg value="-X${plugin.xjc.collection-setter.name}" />
			<schema dir="${dir.resources.jaxb.schemas}/CityGML" includes="citygml4j_profile.xsd" />
			<binding dir="${dir.resources.jaxb.schemas}/CityGML" includes="binding.xjb" />
			<produces dir="${dir.src-gen}" includes="**/*" />
			<depends dir="${dir.resources.jaxb.schemas}" includes="**/*.xsd" />
		</xjc>

		<delete dir="${dir.src-gen}/org/citygml4j/jaxb/ade_hooks" />
	</target>

	<target name="generate_javadoc" depends="generate_jaxb_binding" description="generate API javadoc">
		<delete dir="${dir.dist.javadoc}" />
		<mkdir dir="${dir.dist.javadoc}" />

		<!-- copy overview.html and replace token -->
		<copy file="${dir.resources.javadoc}/overview.html" tofile="${dir.resources.javadoc}/overview_adapted.html" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!citygml4j.name!" value="${citygml4j.name}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!citygml4j.version!" value="${citygml4j.version}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!citygml4j.homepage!" value="${citygml4j.homepage}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!vendor.copyright.year!" value="${vendor.copyright.year}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!vendor.name!" value="${vendor.name}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!vendor.organisation!" value="${vendor.organisation}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!vendor.country!" value="${vendor.country}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!vendor.homepage!" value="${vendor.homepage}" />

		<!-- create javadoc from source files -->
		<javadoc access="public" author="true" classpathref="classpath" destdir="${dir.dist.javadoc}" doctitle="${citygml4j.name} - ${citygml4j.description}" encoding="UTF-8" charset="UTF-8" maxmemory="256m" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" overview="${dir.resources.javadoc}/overview_adapted.html" packagenames="org.citygml4j.*" source="1.6" sourcepath="${dir.src};${dir.src-gen}" splitindex="true" use="true" version="true" />

		<delete file="${dir.resources.javadoc}/overview_adapted.html" />
	</target>

	<target name="compile_src" depends="generate_jaxb_binding" description="compile the source">
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build.classes}" />

		<!-- compile the java code from ${dir.src} and ${dir.src-gen} into ${build} -->
		<javac classpathref="classpath" srcdir="${dir.src-gen}" destdir="${dir.build.classes}" />
		<javac classpathref="classpath" srcdir="${dir.src}" destdir="${dir.build.classes}" />
	</target>

	<target name="generate_jar" depends="compile_src" description="generate the citygml4j library file">
		<!-- create the distribution directory -->
		<delete dir="${dir.dist.lib}" />
		<mkdir dir="${dir.dist.lib}" />

		<!-- copy README and LICENSE templates to tmp folder -->
		<copy todir="${dir.dist.tmp}">
			<fileset dir="${dir.resources.doc}" includes="**/*" />
			<fileset dir="${dir.resources.license}" includes="**/*" />
		</copy>

		<!-- replace tokens in template files -->
		<replace file="${dir.dist.tmp}/README" token="!citygml4j.name!" value="${citygml4j.name}" />
		<replace file="${dir.dist.tmp}/README" token="!citygml4j.version!" value="${citygml4j.version}" />
		<replace file="${dir.dist.tmp}/README" token="!citygml4j.description!" value="${citygml4j.description}" />
		<replace file="${dir.dist.tmp}/README" token="!citygml4j.homepage!" value="${citygml4j.homepage}" />
		<replace file="${dir.dist.tmp}/README" token="!vendor.name!" value="${vendor.name}" />
		<replace file="${dir.dist.tmp}/README" token="!vendor.organisation!" value="${vendor.organisation}" />
		<replace file="${dir.dist.tmp}/README" token="!vendor.copyright.year!" value="${vendor.copyright.year}" />
		<replace file="${dir.dist.tmp}/README" token="!vendor.homepage!" value="${vendor.homepage}" />
		<replace file="${dir.dist.tmp}/README" token="!vendor.country!" value="${vendor.country}" />
		<replace file="${dir.dist.tmp}/README" token="!developer.main.name!" value="${developer.main.name}" />
		<replace file="${dir.dist.tmp}/README" token="!developer.main.email!" value="${developer.main.email}" />
		<replace file="${dir.dist.tmp}/LICENSE" token="!citygml4j.name!" value="${citygml4j.name}" />
		<replace file="${dir.dist.tmp}/LICENSE" token="!citygml4j.description!" value="${citygml4j.description}" />

		<!-- copy README template to dir.dist folder -->
		<copy todir="${dir.dist}">
			<fileset dir="${dir.dist.tmp}" includes="README" />
		</copy>

		<!-- copy LICENSE template to license folder -->
		<copy todir="${dir.dist.license}">
			<fileset dir="${dir.dist.tmp}" excludes="README" />
		</copy>

		<!-- copy schema files -->
		<copy todir="${dir.build.schemas}">
			<fileset dir="${dir.resources.schemas}" includes="**/*" />
		</copy>

		<!-- set package variables -->
		<pathconvert property="manifest.classpath" dirsep="/" pathsep=" " refid="classpath">
			<map from="${basedir}${file.separator}lib${file.separator}" to="" />
		</pathconvert>
		<buildnumber file="build.num" />

		<!-- put everything in ${build} into .jar file -->
		<jar jarfile="${dir.dist.lib}/${citygml4j.jar}" basedir="${dir.build.classes}">
			<fileset dir="${dir.dist.tmp}" includes="**/*" />
			<manifest>
				<attribute name="Built-Id" value="${user.name}-${citygml4j.name}-${citygml4j.version}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Implementation-Title" value="${citygml4j.description}" />
				<attribute name="Implementation-Version" value="${citygml4j.version}-b${build.number}" />
				<attribute name="Implementation-Vendor" value="${vendor.shortinfo}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
		</jar>

		<!-- copy mandatory dependencies -->
		<copy toDir="${dir.dist.lib}">
			<fileset dir="${dir.lib}" includes="*.jar" />
		</copy>

		<!-- clean up -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dist.tmp}" />
	</target>

	<target name="dist" depends="clean_samples, generate_javadoc, generate_jar" description="generate and pack the citygml4j distribution">
		<delete dir="${dir.dist.samples}" />
		<mkdir dir="${dir.dist.samples}" />

		<!-- copy sample files -->
		<copy toDir="${dir.dist.samples}">
			<fileset dir="${dir.samples}" includes="**/*" />
		</copy>
	</target>

</project>
