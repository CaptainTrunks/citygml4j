<?xml version="1.0" encoding="UTF-8"?>
<!--
 * citygml4j - The Open Source Java API for CityGML
 * https://github.com/citygml4j
 * 
 * Copyright (C) 2013 - 2015,
 * Claus Nagel <claus.nagel@gmail.com>
 *
 * The citygml4j library is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
-->
<project name="citygml4j" default="dist" basedir=".">

	<!-- load external property sets -->
	<property file="default.properties" />

	<!-- classpath -->
	<path id="classpath">
		<fileset dir="${dir.lib}" includes="*.jar" />
	</path>

	<!-- JAXB XJC compiler -->
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJC2Task">
		<classpath>
			<fileset dir="${dir.resources.jaxb.xjc}" includes="*.jar" />
		</classpath>
	</taskdef>

	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<target name="clean" description="clean up">
		<!-- delete the ${dir.build} and ${jar} directory trees -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dist.lib}" />
		<delete dir="${dir.dist.javadoc}" />
		<delete dir="${dir.dist.samples}" />
		<delete dir="${dir.dist}" />
	</target>

	<target name="clean_samples" description="clean sample dir">
		<subant target="clean">
			<fileset dir="${dir.samples}" includes="**/build.xml" />
		</subant>
	</target>

	<target name="generate_jaxb_binding" description="compile JAXB classes from CityGML schemas">
		<mkdir dir="${dir.src-gen}/org/citygml4j/jaxb" />

		<!-- create JAXB classes from CityGML schemas -->
		<xjc destdir="${dir.src-gen}" extension="true" removeOldOutput="yes" description="generate CityGML schema derived classess">
			<arg line="
				-Xnamespace-prefix
				-Xsetters
				-Xsetters-mode=direct" />
			<schema dir="${dir.resources.jaxb.schemas}/CityGML" includes="citygml4j_profile.xsd" />
			<binding dir="${dir.resources.jaxb.schemas}/CityGML" includes="binding.xjb" />
			<produces dir="${dir.src-gen}" includes="**/*" />
			<depends dir="${dir.resources.jaxb.schemas}" includes="**/*.xsd" />
			<classpath>
				<fileset dir="${dir.resources.jaxb.xjc-plugins}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</xjc>

		<delete dir="${dir.src-gen}/org/citygml4j" />
	</target>

	<target name="generate_javadoc" depends="generate_jaxb_binding" description="generate API javadoc">
		<delete dir="${dir.dist.javadoc}" />
		<mkdir dir="${dir.dist.javadoc}" />

		<!-- copy overview.html and replace token -->
		<copy file="${dir.resources.javadoc}/overview.html" tofile="${dir.resources.javadoc}/overview_adapted.html" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!citygml4j.name!" value="${citygml4j.name}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!citygml4j.version!" value="${citygml4j.version}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!citygml4j.homepage!" value="${citygml4j.homepage}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!copyright.year!" value="${copyright.year}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!copyright.owner!" value="${copyright.owner}" />
		<replace file="${dir.resources.javadoc}/overview_adapted.html" token="!copyright.owner.email!" value="${copyright.owner.email}" />

		<!-- create javadoc from source files -->
		<javadoc access="public" author="true" classpathref="classpath" destdir="${dir.dist.javadoc}" doctitle="${citygml4j.name} - ${citygml4j.description}" encoding="UTF-8" charset="UTF-8" maxmemory="256m" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" overview="${dir.resources.javadoc}/overview_adapted.html" packagenames="org.citygml4j.*" sourcepath="${dir.src};${dir.src-gen}" splitindex="true" use="true" version="true" />

		<delete file="${dir.resources.javadoc}/overview_adapted.html" />
	</target>

	<target name="compile_src" depends="generate_jaxb_binding" description="compile the source">
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build.classes}" />

		<!-- compile the java code from ${dir.src} and ${dir.src-gen} into ${build} -->
		<javac includeantruntime="false" classpathref="classpath" srcdir="${dir.src-gen}" destdir="${dir.build.classes}" />
		<javac includeantruntime="false" classpathref="classpath" srcdir="${dir.src}" destdir="${dir.build.classes}" />
	</target>

	<target name="generate_jar" depends="compile_src" description="generate the citygml4j library file">
		<!-- create the distribution directory -->
		<delete dir="${dir.dist.lib}" />
		<mkdir dir="${dir.dist.lib}" />

		<!-- copy README.txt and LICENSE.txt templates to the tmp folder -->
		<copy todir="${dir.dist.tmp}">
			<fileset dir="${dir.resources.doc}" includes="**/*" />
			<fileset dir="${dir.resources.license}" includes="**/*" />
		</copy>

		<!-- replace tokens in template files -->
		<replace file="${dir.dist.tmp}/README.txt" token="!citygml4j.name!" value="${citygml4j.name}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!citygml4j.version!" value="${citygml4j.version}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!citygml4j.description!" value="${citygml4j.description}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!citygml4j.homepage!" value="${citygml4j.homepage}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!citygml4j.git!" value="${citygml4j.git}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!copyright.year!" value="${copyright.year}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!copyright.owner!" value="${copyright.owner}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!copyright.owner.email!" value="${copyright.owner.email}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!developer.main.name!" value="${developer.main.name}" />
		<replace file="${dir.dist.tmp}/README.txt" token="!developer.main.email!" value="${developer.main.email}" />
		<replace file="${dir.dist.tmp}/LICENSE.txt" token="!citygml4j.name!" value="${citygml4j.name}" />
		<replace file="${dir.dist.tmp}/LICENSE.txt" token="!citygml4j.description!" value="${citygml4j.description}" />

		<!-- copy README.txt template to dir.dist folder -->
		<copy todir="${dir.dist}">
			<fileset dir="${dir.dist.tmp}" includes="README.txt" />
		</copy>

		<!-- copy LICENSE.txt template to license folder -->
		<copy todir="${dir.dist.license}">
			<fileset dir="${dir.dist.tmp}" excludes="README.txt" />
		</copy>

		<!-- copy schema files -->
		<copy todir="${dir.build.schemas}">
			<fileset dir="${dir.resources.schemas}" includes="**/*" />
		</copy>

		<!-- set package variables -->
		<pathconvert property="manifest.classpath" dirsep="/" pathsep=" " refid="classpath">
			<map from="${basedir}${file.separator}lib${file.separator}" to="" />
		</pathconvert>
		<buildnumber file="build.num" />

		<!-- put everything in ${build} into .jar file -->
		<jar jarfile="${dir.dist.lib}/${citygml4j.jar}" basedir="${dir.build.classes}">
			<fileset dir="${dir.dist.tmp}" includes="**/*" />
			<manifest>
				<attribute name="Built-Id" value="${user.name}-${citygml4j.name}-${citygml4j.version}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Implementation-Title" value="${citygml4j.name}" />
				<attribute name="Implementation-Version" value="${citygml4j.version}+${build.number}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
		</jar>

		<!-- copy mandatory dependencies -->
		<copy toDir="${dir.dist.lib}">
			<fileset dir="${dir.lib}" includes="*.jar" />
		</copy>

		<!-- clean up -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dist.tmp}" />
	</target>

	<target name="dist" depends="clean_samples, generate_javadoc, generate_jar" description="generate and pack the citygml4j distribution">
		<delete dir="${dir.dist.samples}" />
		<mkdir dir="${dir.dist.samples}" />

		<!-- copy sample files -->
		<copy toDir="${dir.dist.samples}">
			<fileset dir="${dir.samples}" includes="**/*" />
		</copy>
	</target>

</project>
